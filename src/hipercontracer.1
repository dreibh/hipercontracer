.\" ========================================================================
.\"    _   _ _ ____            ____          _____
.\"   | | | (_)  _ \ ___ _ __ / ___|___  _ _|_   _| __ __ _  ___ ___ _ __
.\"   | |_| | | |_) / _ \ '__| |   / _ \| '_ \| || '__/ _` |/ __/ _ \ '__|
.\"   |  _  | |  __/  __/ |  | |__| (_) | | | | || | | (_| | (_|  __/ |
.\"   |_| |_|_|_|   \___|_|   \____\___/|_| |_|_||_|  \__,_|\___\___|_|
.\"
.\"      ---  High-Performance Connectivity Tracer (HiPerConTracer)  ---
.\"                https://www.nntb.no/~dreibh/hipercontracer/
.\" ========================================================================
.\"
.\" High-Performance Connectivity Tracer (HiPerConTracer)
.\" Copyright (C) 2015-2025 by Thomas Dreibholz
.\"
.\" This program is free software: you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation, either version 3 of the License, or
.\" (at your option) any later version.
.\"
.\" This program is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License
.\" along with this program.  If not, see <http://www.gnu.org/licenses/>.
.\"
.\" Contact: dreibh@simula.no
.\"
.\" ###### Setup ############################################################
.Dd April 11, 2025
.Dt hipercontracer 1
.Os hipercontracer
.\" ###### Name #############################################################
.Sh NAME
.Nm hipercontracer
.Nd High-Performance Connectivity Tracer (HiPerConTracer)
.\" ###### Synopsis #########################################################
.Sh SYNOPSIS
.Nm hipercontracer
.Op Fl P | Fl Fl ping
.Op Fl T | Fl Fl traceroute
.\" .Op Fl J | Fl Fl jitter
.Op Fl L Ar level | Fl Fl loglevel Ar level
.Op Fl Z Ar on|off | Fl Fl logcolor Ar on|off
.Op Fl O Ar file | Fl Fl logfile Ar file
.Op Fl q | Fl Fl quiet
.Op Fl v | Fl Fl verbose
.Op Fl U Ar user|uid | Fl Fl user Ar user|uid
.Op Fl # Ar identifier | Fl Fl measurement-id Ar identifier
.Op Fl S Ar address|hostname[,traffic_class[,...]] | Fl Fl source Ar address|hostname[,traffic_class[,...]]
.Op Fl D Ar address|hostname | Fl Fl destination Ar address|hostname
.Op Fl Fl sources-from-file Ar file
.Op Fl Fl destinations-from-file Ar file
.Op Fl M Ar ICMP|UDP | Fl Fl iomodule Ar ICMP|UDP
.Op Fl I Ar number_of_iterations | Fl Fl iterations Ar number_of_iterations
.Op Fl Fl tracerouteinterval Ar milliseconds
.Op Fl Fl tracerouteintervaldeviation Ar fraction
.Op Fl Fl tracerouteduration Ar milliseconds
.Op Fl Fl tracerouterounds Ar rounds
.Op Fl Fl tracerouteinitialmaxttl Ar value
.Op Fl Fl traceroutefinalmaxttl Ar value
.Op Fl Fl tracerouteincrementmaxttl Ar value
.Op Fl Fl traceroutepacketsize Ar bytes
.Op Fl Fl tracerouteudpsourceport Ar port
.Op Fl Fl tracerouteudpdestinationport Ar port
.Op Fl Fl pinginterval Ar milliseconds
.Op Fl Fl pingintervaldeviation Ar fraction
.Op Fl Fl pingexpiration Ar milliseconds
.Op Fl Fl pingburst Ar packets
.Op Fl Fl pingttl Ar value
.Op Fl Fl pingpacketsize Ar bytes
.Op Fl Fl pingudpsourceport Ar port
.Op Fl Fl pingudpdestinationport Ar port
.\" .Op Fl Fl jitterinterval Ar milliseconds
.\" .Op Fl Fl jitterintervaldeviation Ar fraction
.\" .Op Fl Fl jitterexpiration Ar milliseconds
.\" .Op Fl Fl jitterburst Ar packets
.\" .Op Fl Fl jitterttl Ar value
.\" .Op Fl Fl jitterpacketsize Ar bytes
.\" .Op Fl Fl jitterrecordraw
.\" .Op Fl Fl jitterudpsourceport Ar port
.\" .Op Fl Fl jitterudpdestinationport Ar port
.Op Fl R Ar directory | Fl Fl resultsdirectory Ar directory
.Op Fl x Ar seconds | Fl Fl resultstransactionlength Ar seconds
.Op Fl C Ar none|XZ|BZip2|GZip | Fl Fl resultscompression Ar none|XZ|BZip2|GZip
.Op Fl F Ar version | Fl Fl resultsformat Ar version
.Op Fl z Ar depth | Fl Fl resultstimestampdepth Ar depth
.Op Fl Fl check
.\" ###### Description ######################################################
.Sh DESCRIPTION
.Nm hipercontracer
is a Ping/Traceroute service. It performs regular Ping and Traceroute runs
among sites and can export the results into results statements for import into
a database.
.Pp
.\" ###### Arguments ########################################################
.Sh ARGUMENTS
The following arguments may be provided:
.Bl -tag -width indent
.It Fl P | Fl Fl ping
Start the Ping service.
.It Fl T | Fl Fl traceroute
Start the Traceroute service.
.\" .It Fl J | Fl Fl jitter
.\" Start the Jitter service.
.It Fl L Ar level | Fl Fl loglevel Ar level
Sets the minimum logging level to the provided value: 0=trace, 1=debug, 2=info, 3=warning, 4=error, 5=fatal.
.It Fl Z Ar on|off | Fl Fl logcolor Ar on|off
Enables (on) or disables (off) the usage of ANSI color escape sequences to colorise the log output according to its level.
.It Fl O Ar file | Fl Fl logfile Ar file
Sets a file name for appending the log output to. If a file is set, no log output is made to the console.
Otherwise, all log output will be written to the console.
.It Fl q | Fl Fl quiet
Sets the minimum logging level to 3 (warning).
.It Fl v | Fl Fl verbose
Sets the minimum logging level to 0 (trace).
.It Fl U Ar user|uid | Fl Fl user Ar user|uid
After startup, HiPerConTracer uses UID and GID of the given user (by name or GID).
The output directory's ownership as well as the ownership of the created results
files will be set accordingly.
.It Fl # Ar identifier | Fl Fl measurement-id Ar identifier
Sets a unique measurement identifier for the measurement. All output files will have this identifier in their file name (#<ID>).
It can be used to set a setup-wide unique identifier to identify the vantage point. If no measurement identifier is specified,
the files will contain the process ID instead (P<ID>). Range: 0-2147483647.
Default: 0 (using process ID instead).
.It Fl S Ar address|hostname[,traffic_class[,...]] | Fl Fl source Ar address|hostname[,traffic_class[,...]]
Adds the given source address or hostname. It is possible to use the ANY address (0.0.0.0 or ::), in order to just use the default route.
If no traffic class is given, Best Effort (00) is used. Otherwise, the list of given traffic classes (in hexadecimal) is used. Alternatively, a traffic class can be specified by PHB name (BE, EF, AF11, AF12, AF13, AF21, AF22, AF23, AF31, AF32, AF33, AF41, AF42, AF43, CS1, CS2, CS3, CS4, CS5, CS6, CS7). In this case, the corresponding traffic class with ECN bits set to 0 is used.
Note: use lower-case hexadecimal letters to avoid ambiguities with PHB name (e.g. be for 0xbe instead of BE PHB)!
If a hostname is provided, a DNS resolution is performed and all returned addresses are added.
If no source address is provided, HiPerConTracer automatically adds 0.0.0.0 if there is an IPv4 destination, and :: if there is an IPv6 destination given.
.It Fl D Ar address|hostname | Fl Fl destination Ar address|hostname
Adds the given destination address or hostname.
If a hostname is provided, a DNS resolution is performed and all returned addresses are added.
.It Fl Fl sources-from-file Ar file
Read sources from given file. This option may be used multiple times, to read from multiple files.
.It Fl Fl destinations-from-file Ar file
Read destinations from given file. This option may be used multiple times, to read from multiple files.
.It Fl M Ar ICMP|UDP | Fl Fl iomodule Ar ICMP|UDP
Adds an I/O module: ICMP or UDP. The option may be specified multiple times with different modules.
.It Fl I Ar number_of_iterations | Fl Fl iterations Ar number_of_iterations
Limit the number of measurement iterations (measurement for all source/destination
pairs) to the given number of iterations. The default 0 lets HiPerConTracer run
continuously.
.It Fl Fl tracerouteinterval Ar milliseconds
Sets the Traceroute interval (time for each full round of destinations).
.It Fl Fl tracerouteintervaldeviation Ar fraction
Randomly deviate the Traceroute interval by the given fraction (as 0.0 to 1.0), that is to chose out of [interval - fraction * interval, interval + fraction * interval], in order to avoid synchronisation effects.
Default is 0.1 (10%).
.It Fl Fl tracerouteduration Ar milliseconds
Sets the Traceroute duration (timeout for each destination).
.It Fl Fl tracerouterounds Ar rounds
For each Traceroute measurement, perform the given number of rounds simultaneously.
Default is 1 round. Range: 1-64.
Each TTL test of a round will have the same ICMP checksum value ("Oslo Traceroute"),
in order to deal with load balancing in the Internet.
Different rounds will have different checksums. That is, different rounds may
experience different paths in the network.
.It Fl Fl tracerouteinitialmaxttl Ar value
Start with the given maximum TTL.
Default is 6.
.It Fl Fl traceroutefinalmaxttl Ar value
Finish with the given maximum TTL (when destination is not reached with current TTL setting).
Default is 36.
.It Fl Fl tracerouteincrementmaxttl Ar value
Increase the maximum TTL by the given value (when destination is not reached with current TTL setting).
Default is 6.
.It Fl Fl traceroutepacketsize Ar bytes
Sets the Traceroute packet size, that is IP header (20 for IPv4/40 for IPv6) + ICMP header (8) + HiPerConTracer header (16) + payload, in bytes.
The actually sent packet size always covers at least the headers for IPv4/IPv6, ICMP and HiPerConTracer. Maximum packet size is 65535.
.It Fl Fl tracerouteudpsourceport Ar port
Sets the Traceroute source port for the UDP module (default: 0, for automatic allocation). Note: If using a fixed UDP port for Traceroute, different UDP source ports must be used for any other services!
.It Fl Fl tracerouteudpdestinationport Ar port
Sets the Traceroute destination port for the UDP module (default: 7, for Echo).
.It Fl Fl pinginterval Ar milliseconds
Sets the Ping interval (time for each full round of destinations).
Default is 5000 ms.
.It Fl Fl pingintervaldeviation Ar fraction
Randomly deviate the Ping interval by the given fraction (as 0.0 to 1.0), that is to chose out of [interval - fraction * interval, interval + fraction * interval], in order to avoid synchronisation effects.
Default is 0.1 (10%).
.It Fl Fl pingexpiration Ar milliseconds
Sets the Ping duration (timeout for each destination).
Default is 10000 ms.
.It Fl Fl pingburst Ar packets
For each Ping measurement, send a burst of the given number of packets.
Default is 1 packet. Range: 1-1024.
.It Fl Fl pingttl Ar value
Sets the Ping TTL value.
Default is 64. Range: 1-255.
.It Fl Fl pingpacketsize Ar bytes
Sets the Jitter packet size, that is IP header (20 for IPv4/40 for IPv6) + ICMP header (8)/UDP header (8) + HiPerConTracer header (16) + payload, in bytes.
The actually sent packet size always covers at least the headers for IPv4/IPv6, transport protocol and HiPerConTracer. Default is 0 (use minimum possible value). Range: 0-65535.
.It Fl Fl pingudpsourceport Ar port
Sets the Ping source port for the UDP module (default: 0, for automatic allocation). Note: If using a fixed UDP port for Ping, different UDP source ports must be used for any other services!
.It Fl Fl pingudpdestinationport Ar port
Sets the Ping destination port for the UDP module (default: 7, for Echo).
.\" .It Fl Fl jitterinterval Ar milliseconds
.\" Sets the Jitter interval (time for each full round of destinations).
.\" Default is 5000 ms.
.\" .It Fl Fl jitterintervaldeviation Ar fraction
.\" Randomly deviate the Jitter interval by the given fraction (as 0.0 to 1.0), that is to chose out of [interval - fraction * interval, interval + fraction * interval], in order to avoid synchronisation effects.
.\" Default is 0.1 (10%).
.\" .It Fl Fl jitterexpiration Ar milliseconds
.\" Sets the Jitter duration (timeout for each destination).
.\" Default is 10000 ms.
.\" .It Fl Fl jitterburst Ar packets
.\" For each Jitter measurement, send a burst of the given number of packets.
.\" Default is 16 packets. Range: 2-1024.
.\" .It Fl Fl jitterttl Ar value
.\" Sets the Jitter TTL value.
.\" Default is 64. Range: 1-255.
.\" .It Fl Fl jitterpacketsize bytes
.\" Sets the Jitter packet size, that is IP header (20 for IPv4/40 for IPv6) + ICMP header (8)/UDP header (8) + HiPerConTracer header (16) + payload, in bytes.
.\" The actually sent packet size always covers at least the headers for IPv4/IPv6, transport protocol and HiPerConTracer.
.\" Default is 128 bytes. Range: 0-65535.
.\" .It Fl Fl jitterudpsourceport Ar port
.\" Sets the Jitter source port for the UDP module (default: 0, for automatic allocation). Note: If using a fixed UDP port for Jitter, different UDP source ports must be used for any other services!
.\" .It Fl Fl jitterudpdestinationport Ar port
.\" Sets the Jitter destination port for the UDP module (default: 7, for Echo).
.\" .It Fl Fl jitterrecordraw
.\" Also record raw Ping results used for jitter computation.
.It Fl R Ar directory | Fl Fl resultsdirectory Ar directory
Sets the results files directory. The results will be stored there. If not specified, to results will be stored.
.It Fl l Ar seconds | Fl Fl resultstransactionlength Ar seconds
After a given number of seconds, begin a new results file.
.It Fl C Ar none|XZ|BZip2|GZip | Fl Fl resultscompression Ar none|XZ|BZip2|GZip
Sets the compression for the output files.
Default: XZ.
.It Fl F Ar version | Fl Fl resultsformat Ar version
Sets the results file format version.
Default: 2 (current version). Range (currently): 1-2.
Note: A future version of HiPerConTracer may increase this default setting!
.It Fl z Ar depth | Fl Fl resultstimestampdepth Ar depth
Create a timestamp-based directory hierarchy for the results, of given depth (default: 0).
0 = none, 1 = year, 2 = year/month, 3 = year/month/day, 4 = year/month/day/hour:00, 5 = year/month/day/hour:00/hour:minute.
.It Fl Fl check
Print build environment information for debugging.
.El
.\" ###### Output format ####################################################
.Sh OUTPUT FORMAT
The output file is a text file (possibly compressed).
The format is as follows, depending on the measurement type:
.Bl -tag -width indent
.\" ====== Format identifier ================================================
.It Format identifier in first line
.Bl -tag -width indent
.It #? HPCT format version programID
.Bl -tag -width indent
.It * format: Format of the output data (Ping, Traceroute, etc.).
.It * version: Version of the output data (decimal).
.It * programID: Identifier for the program generating the output (e.g. HiPerConTracer/2.0.0).
.El
.El
.\" ====== Ping, version 2 ==================================================
.It Ping (version 2, current)
Each Ping entry consists of a #P<m> line, with m=i for ICMP and m=u for UDP (according to underlying I/O module).
.Bl -tag -width indent
.It #P<m> measurementID sourceIP destinationIP timestamp burstseq traffic_class packetsize response_size checksum sourcePort destinationPort status timesource delay_app_send delay_queuing delay_app_receive rtt_app rtt_sw rtt_hw
.Bl -tag -width indent
.It * measurementID: Measurement identifier.
.It * sourceIP: Source IP address.
.It * destinationIP: Destination IP address.
.It * timestamp: Timestamp (nanoseconds since the UTC epoch, hexadecimal).
.It * burstseq: Sequence number within a burst (decimal), numbered from 0.
.It * traffic_class: The IP Traffic Class/Type of Service value of the sent packets (hexadecimal).
.It * packet_size: The sent packet size (decimal, in bytes) including IPv4/IPv6 header, transport header and HiPerConTracer header.
.It * response_size: The response packet size (decimal, in bytes) including IPv4/IPv6 header, transport header and HiPerConTracer header.
.It * checksum: The checksum of the ICMP Echo Request packets (hexadecimal); 0x0000 for other protocols, 0xffff for unknown.
.It * sourcePort: Source port, 0 for ICMP (decimal).
.It * destinationPort: Destination port, 0 for ICMP (decimal).
.It * status: Status code (decimal):
.Bl -tag -width indent
.It - 1 = ICMP response: Time Exceeded
.It - 100 = ICMP response: Unreachable scope
.It - 101 = ICMP response: Unreachable network
.It - 102 = ICMP response: Unreachable host
.It - 103 = ICMP response: Unreachable protocol
.It - 104 = ICMP response: Unreachable port
.It - 105 = ICMP response: Unreachable, prohibited (firewall)
.It - 110 = ICMP response: Unreachable, unknown reason
.It - 200 = Timeout (no response from a router)
.It - 210 = sendto() call failed (generic error)
.It - 211 = sendto() error: tried to send to broadcast address (EACCES)
.It - 212 = sendto() error: network unreachable (ENETUNREACH)
.It - 213 = sendto() error: host unreachable (EHOSTUNREACH)
.It - 214 = sendto() error: address not available (EADDRNOTAVAIL)
.It - 215 = sendto() error: invalid message size (EMSGSIZE)
.It - 216 = sendto() error: not enough buffer space (ENOBUFS)
.It - 255 = Success (destination has responded)
.El
Status values from 100 to 199 denote unreachability, as reported by ICMP error from a router. The rtt_* fields contain the response time of the corresponding router.
Status values from 200 to 254 have the destination IP in their destinationIP field. However, there was no response from a router, so the rtt_* fields will be the configured timeout value (on timeout) or send trial time (on send errors)!
.It * timesource: Source of the timing information (hexadecimal) as: AAQQSSHH
.Bl -tag -width indent
.It AA: Application
.It QQ: Queuing (queuing packet until sending it by driver, in software)
.It SS: Software (sending request by driver until receiving response by driver, in software; decimal, in nanoseconds; -1 if not available)
.It HW: Hardware (sending request by NIC until receiving response by NIC, in hardware; decimal, in nanoseconds; -1 if not available)
.El
Each byte AA, QQ, SS, HH provides the receive time source (upper nibble) and send time source (lower nibble):
.Bl -tag -width indent
.It 0x0: Not available
.It 0x1: System clock
.It 0x2: SO_TIMESTAMPING socket option, microseconds granularity
.It 0x3: SO_TIMESTAMPINGNS socket option (or SO_TIMESTAMPING+SO_TS_CLOCK), nanoseconds granularity
.It 0x4: SIOCGSTAMP ioctl, microseconds granularity
.It 0x5: SIOCGSTAMPNS ioctl, nanoseconds granularity
.It 0x6: SO_TIMESTAMPING socket option, in software, nanoseconds granularity
.It 0xa: SO_TIMESTAMPING socket option, in hardware, nanoseconds granularity
.El
.It * delay_app_send: The measured application send delay (nanoseconds, decimal; -1 if not available).
.It * delay_queuing: The measured kernel software queuing delay (nanoseconds, decimal; -1 if not available).
.It * delay_app_receive: The measured application receive delay (nanoseconds, decimal; -1 if not available).
.It * rtt_app: The measured application RTT (nanoseconds, decimal).
.It * rtt_sw: The measured kernel software RTT (nanoseconds, decimal; -1 if not available).
.It * rtt_hw: The measured kernel hardware RTT (nanoseconds, decimal; -1 if not available).
.El
.El
.\" ====== Ping, version 1 ==================================================
.It Ping (version 1, SUPERSEDED!)
Each Ping entry consists of a #P line.
.Bl -tag -width indent
.It #P sourceIP destinationIP timestamp checksum status rtt traffic_class timesource
.Bl -tag -width indent
.It * sourceIP: Source IP address.
.It * destinationIP: Destination IP address.
.It * timestamp: Timestamp (microseconds since the UTC epoch, hexadecimal).
.It * checksum: The checksum of the ICMP Echo Request packets (hexadecimal).
.It * status: Status code (decimal)
.It * rtt: The measured RTT (microseconds, decimal).
.It * traffic_class: The outgoing IP Traffic Class/Type of Service value of the sent packets (hexadecimal).
This entry has been added with HiPerConTracer 1.4.0!
.It * packet_size: The sent packet size (decimal, in bytes) including IPv4/IPv6 header, transport header and HiPerConTracer header.
This entry has been added with HiPerConTracer 1.6.0!
.It * timesource: Source of the timing information (hexadecimal) as: AA (same as for Ping, see above).
This entry has been added with HiPerConTracer 2.0.0!
.El
.El
.\" ====== Traceroute, version 2 ============================================
.It Traceroute (version 2, current)
Each Traceroute entry begins with a #Tm line, with m=i for ICMP and m=u for UDP (according to underlying I/O module).
This is followed with one TAB-started line per each hop.
.Bl -tag -width indent
.It #T<m> measurementID sourceIP destinationIP timestamp round totalHops traffic_class packet_size checksum sourcePort destinationPort statusFlags pathHash
.Bl -tag -width indent
.It * measurementID: Measurement identifier.
.It * sourceIP: Source IP address.
.It * destinationIP: Destination IP address.
.It * timestamp: Timestamp (nanoseconds since the UTC epoch, hexadecimal) of the current run.
Note: This timestamp is only an identifier for the Traceroute run. All Traceroute rounds of the same run use the same timestamp here!
The actual send timestamp of the request to each hop can be found in sendTimeStamp of the corresponding hop!
.It * round: Round number (decimal).
.It * totalHops: Total hops (decimal).
.It * traffic_class: The IP Traffic Class/Type of Service value of the sent packets (hexadecimal).
.It * packet_size: The sent packet size (decimal, in bytes) including IPv4/IPv6 header, transport header and HiPerConTracer header.
.It * checksum: The checksum of the ICMP Echo Request packets (hexadecimal); 0x0000 for other protocols, 0xffff for unknown.
.It * sourcePort: Source port, 0 for ICMP (decimal).
.It * destinationPort: Destination port, 0 for ICMP (decimal).
.It * statusFlags: Status flags (hexadecimal):
See the status code for Ping above for the lower 8 bits. Additionally:
.Bl -tag -width indent
.It - 0x100 = Route with * (at least one router did not respond)
.It - 0x200 = Destination has responded
.El
.It * pathHash: Hash of the path (hexadecimal).
.El
.It (TAB) sendTimeStamp hopNumber response_size status timesource delay_queuing delay_app_receive rtt_app rtt_app rtt_sw rtt_hw hopIP
.Bl -tag -width indent
.It * sendTimeStamp: Timestamp (nanoseconds since the UTC epoch, hexadecimal) for the request to this hop.
.It * hopNumber: Number of the hop.
.It * response_size: The response packet size (decimal, in bytes) including IPv4/IPv6 header, transport header and HiPerConTracer header.
.It * status: Status code (decimal; the values are the same as for Ping, see above).
.It * timesource: Source of the timing information (hexadecimal; the values are the same as for Ping, see above)
.It * delay_app_send: The measured application send delay (nanoseconds, decimal; -1 if not available).
.It * delay_queuing: The measured kernel software queuing delay (nanoseconds, decimal; -1 if not available).
.It * delay_app_receive: The measured application receive delay (nanoseconds, decimal; -1 if not available).
.It * rtt_app: The measured application RTT (nanoseconds, decimal).
.It * rtt_sw: The measured kernel software RTT (nanoseconds, decimal; -1 if not available).
.It * rtt_hw: The measured kernel hardware RTT (nanoseconds, decimal; -1 if not available).
.It * hopIP: Hop IP address.
.El
.El
.\" ====== Traceroute, version 1 ============================================
.It Traceroute (version 1, SUPERSEDED!)
Each Traceroute entry begins with a #T line.
This is followed with one TAB-started line per each hop.
.Bl -tag -width indent
.It #T sourceIP destinationIP timestamp round checksum totalHops statusFlags pathHash traffic_class packet_size
.Bl -tag -width indent
.It * sourceIP: Source IP address.
.It * destinationIP: Destination IP address.
.It * timestamp: Timestamp (microseconds since the UTC epoch, hexadecimal) of the current run.
Note: This timestamp is only an identifier for the Traceroute run. All Traceroute rounds of the same run use the same timestamp here!
.It * round: Round number.
.It * checksum: The checksum of the ICMP Echo Request packets (hexadecimal).
.It * totalHops: Total hops.
.It * statusFlags: Status flags (hexadecimal).
.It * pathHash: Hash of the path (hexadecimal).
.It * traffic_class: The IP Traffic Class/Type of Service value of the sent packets (hexadecimal).
This entry has been added with HiPerConTracer 1.4.0!
.It * packet_size: The sent packet size (decimal, in bytes) including IPv4/IPv6 header, transport header and HiPerConTracer header.
This entry has been added with HiPerConTracer 1.6.0!
.El
.It (TAB) hopNumber status rtt hopIP timesource
.Bl -tag -width indent
.It * hopNumber: Number of the hop.
.It * status: Status code (in hexadecimal here(!); the values are the same as for Ping, see above).
.It * rtt: The measured RTT (microseconds, decimal).
.It * hopIP: Hop IP address.
.It * timesource: Source of the timing information (hexadecimal) as: AA (same as for Ping, see above).
This entry has been added with HiPerConTracer 2.0.0!
.El
.El
.\" .\" ====== Jitter, version 2 ================================================
.\" .It Jitter (version 2, current; there is no version 1)
.\" Each Jitter entry consists of a #J<m> line, with m=i for ICMP and m=u for UDP (according to underlying I/O module).
.\" .Bl -tag -width indent
.\" .It #J<m> measurementID sourceIP destinationIP timestamp round traffic_class packetsize checksum sourcePort destinationPort status timesource jitter_type
.\" packets_app_send jitter_app_send meandelay_app_send
.\" packets_queuing jitter_queuing meandelay_queuing
.\" packets_app_receive jitter_app_receive meandelay_app_receive
.\" packets_app jitter_app meanrtt_app
.\" packets_sw jitter_sw meanrtt_sw
.\" packets_hw jitter_hw meanrtt_hw
.\" .Bl -tag -width indent
.\" .It * measurementID: Measurement identifier.
.\" .It * sourceIP: Source IP address.
.\" .It * destinationIP: Destination IP address.
.\" .It * timestamp: Timestamp (nanoseconds since the UTC epoch, hexadecimal).
.\" .It * round: Round number (decimal).
.\" .It * traffic_class: The IP Traffic Class/Type of Service value of the sent packets (hexadecimal).
.\" .It * packet_size: The sent packet size (decimal, in bytes) including IPv4/IPv6 header, transport header and HiPerConTracer header.
.\" .It * checksum: The checksum of the ICMP Echo Request packets (hexadecimal); 0x0000 for other protocols, 0xffff for unknown.
.\" .It * sourcePort: Source port, 0 for ICMP (decimal).
.\" .It * destinationPort: Destination port, 0 for ICMP (decimal).
.\" .It * status: Status code (decimal):
.\" .It * timesource: Source of the timing information (hexadecimal) as: AAQQSSHH (same as for Ping, see above).
.\" .It * jitter_type: 0 for calculation as in RFC 3550, Appendix A.8 (decimal).
.\" .It * packets_app_send: Number of packets for application send jitter/mean RTT computation.
.\" .It * meandelay_app_send: Mean application send (nanoseconds, decimal; -1 if not available).
.\" .It * jitter_app_send: Jitter of application send.
.\" .It * packets_queuing: Number of packets for queuing jitter/mean RTT computation
.\" .It * meandelay_queuing: Mean queuing (nanoseconds, decimal; -1 if not available).
.\" .It * jitter_queuing: Jitter of queuing.
.\" .It * packets_app_receive: Number of packets for application receive jitter/mean RTT computation.
.\" .It * meandelay_app_receive: Mean application receive (nanoseconds, decimal; -1 if not available).
.\" .It * jitter_app_receive: Jitter of application receive.
.\" .It * packets_app: Number of packets for application RTT jitter/mean RTT computation.
.\" .It * meanrtt_app: Mean application RTT (nanoseconds, decimal).
.\" .It * jitter_app: Jitter of application RTT.
.\" .It * packets_sw: Number of packets for kernel software RTT jitter/mean RTT computation.
.\" .It * meanrtt_sw: Mean kernel software RTT (nanoseconds, decimal; -1 if not available).
.\" .It * jitter_sw: Jitter of kernel software RTT.
.\" .It * packets_hw: Number of packets for kernel hardware RTT jitter/mean RTT computation.
.\" .It * meanrtt_hw: Mean kernel hardware RTT (nanoseconds, decimal; -1 if not available).
.\" .It * jitter_hw: Jitter of kernel hardware RTT.
.\" .El
.\" If recording of raw Ping results is enabled (\-\-jitterrecordraw), a Jitter entry is followed by the underlying Ping measurement entries (see Ping version 2 format above).
.\" .El
.El
.\" ###### Examples #########################################################
.Sh EXAMPLES
.Bl -tag -width indent
.It hipercontracer \-S 10.1.1.51 \-D 10.1.1.6 \-D 10.1.1.7 \-D 10.1.1.8 \-T \-\-tracerouteinterval 10000 \-\-tracerouteduration 1000 \-v
.It hipercontracer \-\-source 10.1.1.51 \-\-destination 10.1.1.6 \-\-destination 10.1.1.7 \-\-destination 10.1.1.8 \-\-traceroute \-\-tracerouteinterval 10000 \-\-tracerouteduration 1000
.It hipercontracer \-\-source 172.16.0.127 \-\-destination 8.8.8.8 \-\-destination 193.99.144.80 \-\-destination 132.252.181.87 \-\-destination 10.254.254.254 \-\-destination 91.189.93.5 \-\-destination 128.112.139.90 \-\-destination 4.31.198.44 \-\-destination 136.186.1.10 \-\-destination 101.4.112.170 \-\-destination 77.36.144.2 \-\-source 2a02:270:2014:40:92e2:baff:fe48:bde1 \-\-destination 2400:cb00:2048:1::6814:155 \-\-destination 2a02:2e0:3fe:1001:7777:772e:2:85 \-\-destination 2a00:1450:400f:805::2004 \-\-traceroute \-\-ping \-\-tracerouteduration 1000 \-\-tracerouteinitialmaxttl 4 \-\-traceroutefinalmaxttl 32 \-\-tracerouteincrementmaxttl 4 \-\-pinginterval 1000 \-\-pingexpiration 7500 \-\-pingttl 56 \-\-resultsdirectory results \-\-resultstimestampdepth 3
.It hipercontracer \-\-source=0.0.0.0,00,AF11 \-\-source=::,BE,EF,AF11 \-\-destination=8.8.8.8 \-\-destination=2606:4700:10::6814:155 \-\-ping \-\-traceroute \-\-tracerouteduration=1000 \-\-tracerouteinitialmaxttl=4 \-\-traceroutefinalmaxttl=32 \-\-tracerouteincrementmaxttl=4 \-\-pinginterval=1000 \-\-pingexpiration=7500 \-\-pingttl=56 \-\-resultsdirectory=/storage/hpct-results \-\-resultstransactionlength=20 \-\-resultstimestampdepth=4 \-\-quiet
.It hipercontracer \-\-user=hipercontracer \-\-source=10.1.1.51 \-\-destination=10.1.1.6 \-\-destination=10.1.1.7 \-\-destination=10.1.1.8 \-\-traceroute \-\-tracerouteinterval=10000 \-\-tracerouteduration=1000
.It hipercontracer \-\-user=hipercontracer \-\-source=0.0.0.0 \-\-destination=8.8.8.8 \-M ICMP \-\-ping \-\-verbose
.It hipercontracer \-\-user=hipercontracer \-\-source=0.0.0.0 \-\-source=::\-\-destination=www.ietf.org \-\-iomodule ICMP \-\-ping \-\-verbose
.It hipercontracer \-\-user=hipercontracer \-\-source=10.193.4.64 \-\-destination 1.2.3.4 \-\-iomodule ICMP \-\-iomodule UDP \-\-ping \-\-traceroute
.El
.\" ###### Authors ##########################################################
.Sh AUTHORS
Thomas Dreibholz
.br
https://www.nntb.no/~dreibh/hipercontracer
.br
mailto://dreibh@simula.no
.br
