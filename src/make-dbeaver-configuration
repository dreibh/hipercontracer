#!/bin/bash

tempDirectory="$(mktemp -d -t "make-dbeaver-configuration-XXXXXX")"
while [ $# -gt 0 ] ; do
   ./dbshell "$1" --dry-run -B "${tempDirectory}/$(basename "${1//.conf/}")"
   shift
done

cat >"${tempDirectory}/init.json" <<EOF
{
	"folders": {},
	"connection-types": {
		"dev": {
			"name": "Development",
			"color": "255,255,255",
			"description": "Regular development database",
			"auto-commit": true,
			"confirm-execute": false,
			"confirm-data-change": false,
			"smart-commit": false,
			"smart-commit-recover": true,
			"auto-close-transactions": true,
			"close-transactions-period": 1800,
			"auto-close-connections": true,
			"close-connections-period": 14400
		}
	}
}
EOF

jq -s '.' "${tempDirectory}/init.json" ${tempDirectory}/*-data-source.json >data-sources.json
jq -s '.' ${tempDirectory}/*-credentials-config.json >"${tempDirectory}/credentials-config.json.orig"


# credentials-config.json.in is in plain text.
# DBeaver expects a simple encrypted file:
dd if=/dev/urandom of="${tempDirectory}/credentials-config.json.in" bs=16 count=1   # 16 bytes random number
dd if="${tempDirectory}/credentials-config.json.orig" of="${tempDirectory}/credentials-config.json.in" oflag=append conv=notrunc
openssl aes-128-cbc \
   -K babb4a9f774ab853c96c2d653dfe544a -iv 00000000000000000000000000000000 \
   -in "${tempDirectory}/credentials-config.json.in" >credentials-config.json

# To decrypt:
# (See also: https://stackoverflow.com/questions/39928401/recover-db-password-stored-in-my-dbeaver-connection)

openssl aes-128-cbc -d \
   -K babb4a9f774ab853c96c2d653dfe544a -iv 00000000000000000000000000000000 \
   -in credentials-config.json | dd bs=1 skip=16 | jq .

rm -rf "${tempDirectory}"
