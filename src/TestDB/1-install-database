#!/bin/bash -e

if [ $# -ne 1 ] ; then
   echo >&2 "Usage: $0 mariadb|postgres|mongodb"
   exit 1
fi


# ###### Prepare key and certificate ########################################
HOST=`hostname -f`
KEY_FILE="/etc/ssl/${HOST}.key"
CERT_FILE="/etc/ssl/${HOST}.crt"
PEM_FILE="/etc/ssl/${HOST}.pem"
if [ ! -e /etc/ssl/${HOST}.key -o ! -e /etc/ssl/${HOST}.crt ] ; then

   echo "Creating key and certificate ..."

   sudo openssl req -x509 -newkey rsa:4096 -sha256 -nodes \
      -keyout ${KEY_FILE} \
      -out ${CERT_FILE} \
      -days 3650 -subj '/CN=`hostname -f`' && \
   sudo cat ${KEY_FILE} ${CERT_FILE} | sudo tee ${PEM_FILE}
fi


# ###### MariaDB ############################################################
if [ "$1" == "mariadb" ] ; then
   # Documentation: https://www.digitalocean.com/community/tutorials/how-to-install-mariadb-on-ubuntu-22-04

   echo "Installing MariaDB ..."

   sudo apt install -y mariadb-server mariadb-backup mariadb-client
   sudo mysql_secure_installation

   # Enable network access:
   sudo sed -e 's/^\(bind-address[ \t]*\)=.*$/\1= */g' /etc/mysql/mariadb.conf.d/50-server.cnf | sudo tee /etc/mysql/mariadb.conf.d/50-server.cnf.new
   sudo mv /etc/mysql/mariadb.conf.d/50-server.cnf.new /etc/mysql/mariadb.conf.d/50-server.cnf
   sudo service mariadb restart

   # Install MySQL Workbench:
   # wget https://dev.mysql.com/get/Downloads/MySQLGUITools/mysql-workbench-community_8.0.31-1ubuntu22.10_amd64.deb
   # sudo apt install ./mysql-workbench-community_8.0.31-1ubuntu22.10_amd64.deb


# ###### PostgreSQL #########################################################
elif [ "$1" == "postgresql" ] ; then
   # Documentation: https://www.digitalocean.com/community/tutorials/how-to-install-postgresql-on-ubuntu-22-04-quickstart

   echo "Installing PostgreSQL ..."

   sudo apt install -y postgresql-all postgresql-contrib

   # Enable network access:
   sudo sed \
      -e 's#^host    all             all             127.0.0.1/32            scram-sha-256#host    all             all             0.0.0.0/0               scram-sha-256#' \
      -e 's#^host    all             all             ::1/128                 scram-sha-256#host    all             all             ::/0                    scram-sha-256#' \
      /etc/postgresql/14/main/pg_hba.conf | sudo tee /etc/postgresql/14/main/pg_hba.conf.new && \
   sudo mv /etc/postgresql/14/main/pg_hba.conf.new /etc/postgresql/14/main/pg_hba.conf

   sudo sed \
      -e "s%#listen_addresses = 'localhost'%listen_addresses = '*'        %" \
      /etc/postgresql/14/main/postgresql.conf | sudo tee /etc/postgresql/14/main/postgresql.conf.new && \
   sudo mv /etc/postgresql/14/main/postgresql.conf.new /etc/postgresql/14/main/postgresql.conf

   sudo service postgresql restart


# ###### MongoDB ############################################################
elif [ "$1" == "mongodb" ] ; then
   # Documentation: https://www.mongodb.com/docs/manual/tutorial/install-mongodb-on-ubuntu/

   echo "Installing MongoDB ..."

   # FIXME! Still no official MongoDB for Ubuntu 22.04 ...
   if [ ! -e libssl1.1_1.1.1f-1ubuntu2.16_amd64.deb ] ; then
      wget http://archive.ubuntu.com/ubuntu/pool/main/o/openssl/libssl1.1_1.1.1f-1ubuntu2.16_amd64.deb
      sudo dpkg -i libssl1.1_1.1.1f-1ubuntu2.16_amd64.deb 
   fi
   wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | gpg --dearmor | sudo tee /usr/share/keyrings/mongodb.gpg
   if [ ! -e /etc/apt/sources.list.d/mongodb-org-6.0.list ] ; then
      echo "deb [ signed-by=/usr/share/keyrings/mongodb.gpg arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
   fi
   sudo apt-get update -qq
   sudo apt-get install -y mongodb-org

   sudo sed \
      -e 's#  bindIp: 127.0.0.1#  ipv6: true\n  bindIpAll: true\n  ssl:\n    mode: requireSSL\n    PEMKeyFile: ${PEM_FILE}\n    disabledProtocols: TLS1_0,TLS1_1,TLS1_2#' \
      -e 's!#security:!security:\n  authorization: enabled!' \
      /etc/mongod.conf | sudo tee /etc/mongod.conf.new
   sudo mv /etc/mongod.conf.new /etc/mongod.conf

   sudo systemctl restart mongod
   sudo systemctl enable mongod


# ###### Error ##############################################################
else
   echo >&2 "ERROR: Unsupported database: $1"
   exit 1
fi
